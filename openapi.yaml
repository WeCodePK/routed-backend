openapi: 3.0.4

info:
  version: "v0"
  title: Routed API

servers:
  - url: https://routed-backend.wckd.pk/api/v0

paths:
  /auth/admin/login:
    post:
      tags: [Auth]
      summary: Allow an admin to login using their email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      jwt:
                        type: string
              examples:
                success:
                  value:
                    success: true
                    message: Login successful.
                    data:
                      jwt: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 ..."
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'

  /auth/admin/change:
    post:
      tags: [Auth]
      summary: Change the password of an admin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [oldPassword, newPassword]
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: Password changed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                success:
                  value:
                    success: true
                    message: Password changed successfully.
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        422:
          description: newPassword does not meet security requirements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                weakPassword:
                  value:
                    success: false
                    message: Password does not meet security requirements.

  /auth/admin/forgot:
    post:
      tags: [Auth]
      summary: Initiate a forgot password request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
      responses:
        200:
          description: If the user exists, a password reset email has been sent out.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                success:
                  value:
                    success: true
                    message: If the user exists, a password reset email has been sent out.
        400:
          $ref: '#/components/responses/BadRequest'

  /auth/admin/reset:
    post:
      tags: [Auth]
      summary: Reset an admin's password using a reset token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, newPassword]
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: Password reset successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                success:
                  value:
                    success: true
                    message: Password reset successfully.
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        422:
          description: newPassword does not meet security requirements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                weakPassword:
                  value:
                    success: false
                    message: Password does not meet security requirements.

  /auth/driver/otp:
    post:
      tags: [Auth]
      summary: Generate and send an OTP to a driver's phone number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phone]
              properties:
                phone:
                  type: string
      responses:
        200:
          description: If the user exists, an OTP has been sent to their phone number.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              examples:
                otpSent:
                  value:
                    success: true
                    message: If the user exists, an OTP has been sent to their phone number.
        400:
          $ref: '#/components/responses/BadRequest'

  /auth/driver/login:
    post:
      tags: [Auth]
      summary: Allow a driver to login using their OTP.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [otp, phone]
              properties:
                otp:
                  type: string
                phone:
                  type: string
      responses:
        200:
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      jwt:
                        type: string
              examples:
                success:
                  value:
                    success: true
                    message: Login successful.
                    data:
                      jwt: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'

components:
  responses:
    BadRequest:
      description: Missing or malformed input.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
          examples:
            badRequest:
              value:
                success: false
                message: Missing or malformed input.

    Unauthorized:
      description: Unauthorized or invalid credentials.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
          examples:
            unauthorized:
              value:
                success: false
                message: Invalid credentials or access denied.
